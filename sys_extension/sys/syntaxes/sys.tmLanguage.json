{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "SysY+",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#characters"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#function-call"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#variable-declaration"
        },
        {
            "include": "#function-definition"
        },
        {
            "include": "#struct-definition"
        },
        {
            "include": "#control-structures"
        },
        {
            "include": "#identifiers"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.sysyplus",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.sysyplus",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [
                        {
                            "name": "comment.block.documentation.sysyplus",
                            "match": ".*"
                        }
                    ]
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.conditional.sysyplus",
                    "match": "\\b(if|else)\\b"
                },
                {
                    "name": "keyword.control.loop.sysyplus",
                    "match": "\\b(while|for)\\b"
                },
                {
                    "name": "keyword.control.flow.sysyplus",
                    "match": "\\b(break|continue|return)\\b"
                },
                {
                    "name": "storage.type.primitive.sysyplus",
                    "match": "\\b(int|float|char|void)\\b"
                },
                {
                    "name": "storage.modifier.sysyplus",
                    "match": "\\b(const)\\b"
                },
                {
                    "name": "keyword.other.struct.sysyplus",
                    "match": "\\b(struct)\\b"
                },
                {
                    "name": "constant.language.boolean.sysyplus",
                    "match": "\\b(true|false)\\b"
                },
                {
                    "name": "constant.language.null.sysyplus",
                    "match": "\\b(null)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.sysyplus",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.sysyplus",
                    "match": "\\\\[nrt\\\\\"'0abfv]"
                },
                {
                    "name": "constant.character.escape.hex.sysyplus",
                    "match": "\\\\x[0-9a-fA-F]{2}"
                },
                {
                    "name": "constant.character.escape.octal.sysyplus",
                    "match": "\\\\[0-7]{1,3}"
                }
            ]
        },
        "characters": {
            "name": "string.quoted.single.sysyplus",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.sysyplus",
                    "match": "\\\\[nrt\\\\\"'0abfv]"
                },
                {
                    "name": "constant.character.escape.hex.sysyplus",
                    "match": "\\\\x[0-9a-fA-F]{2}"
                },
                {
                    "name": "constant.character.escape.octal.sysyplus",
                    "match": "\\\\[0-7]{1,3}"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.float.sysyplus",
                    "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?[fF]?\\b"
                },
                {
                    "name": "constant.numeric.float.sysyplus",
                    "match": "\\b\\d+[eE][+-]?\\d+[fF]?\\b"
                },
                {
                    "name": "constant.numeric.float.sysyplus",
                    "match": "\\b\\d+[fF]\\b"
                },
                {
                    "name": "constant.numeric.hex.sysyplus",
                    "match": "\\b0[xX][0-9a-fA-F]+\\b"
                },
                {
                    "name": "constant.numeric.octal.sysyplus",
                    "match": "\\b0[0-7]+\\b"
                },
                {
                    "name": "constant.numeric.integer.sysyplus",
                    "match": "\\b\\d+\\b"
                }
            ]
        },
        "function-call": {
            "name": "meta.function-call.sysyplus",
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
            "captures": {
                "1": { "name": "entity.name.function.call.sysyplus" },
                "2": { "name": "punctuation.definition.arguments.begin.sysyplus" }
            }
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.compound.sysyplus",
                    "match": "(\\+=|-=|\\*=|/=|%=|&=|\\|=|\\^=|<<=|>>=)"
                },
                {
                    "name": "keyword.operator.assignment.sysyplus",
                    "match": "="
                },
                {
                    "name": "keyword.operator.comparison.sysyplus",
                    "match": "(==|!=|<=|>=|<|>)"
                },
                {
                    "name": "keyword.operator.logical.sysyplus",
                    "match": "(&&|\\|\\||!)"
                },
                {
                    "name": "keyword.operator.arithmetic.sysyplus",
                    "match": "(\\+|-|\\*|/|%)"
                },
                {
                    "name": "keyword.operator.bitwise.sysyplus",
                    "match": "(&|\\||\\^|~|<<|>>)"
                },
                {
                    "name": "keyword.operator.increment.sysyplus",
                    "match": "(\\+\\+|--)"
                },
                {
                    "name": "punctuation.terminator.statement.sysyplus",
                    "match": ";"
                },
                {
                    "name": "punctuation.separator.comma.sysyplus",
                    "match": ","
                }
            ]
        },
        "variable-declaration": {
            "patterns": [
                {
                    "name": "meta.variable.declaration.array.sysyplus",
                    "match": "\\b(const\\s+)?(int|float|char)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\[\\s*\\d*\\s*\\])\\s*(=)?",
                    "captures": {
                        "1": { "name": "storage.modifier.sysyplus" },
                        "2": { "name": "storage.type.primitive.sysyplus" },
                        "3": { "name": "variable.name.sysyplus" },
                        "4": { "name": "meta.brackets.square.sysyplus" },
                        "5": { "name": "keyword.operator.assignment.sysyplus" }
                    }
                },
                {
                    "name": "meta.variable.declaration.sysyplus",
                    "match": "\\b(const\\s+)?(int|float|char)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(=)?",
                    "captures": {
                        "1": { "name": "storage.modifier.sysyplus" },
                        "2": { "name": "storage.type.primitive.sysyplus" },
                        "3": { "name": "variable.name.sysyplus" },
                        "4": { "name": "keyword.operator.assignment.sysyplus" }
                    }
                }
            ]
        },
        "function-definition": {
            "patterns": [
                {
                    "name": "meta.function.definition.sysyplus",
                    "begin": "\\b(int|float|char|void)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
                    "beginCaptures": {
                        "1": { "name": "storage.type.function.return.sysyplus" },
                        "2": { "name": "entity.name.function.definition.sysyplus" },
                        "3": { "name": "punctuation.definition.parameters.begin.sysyplus" }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.parameters.end.sysyplus" }
                    },
                    "patterns": [
                        {
                            "match": "\\b(int|float|char)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
                            "captures": {
                                "1": { "name": "storage.type.primitive.sysyplus" },
                                "2": { "name": "variable.parameter.function.sysyplus" }
                            }
                        },
                        {
                            "name": "punctuation.separator.parameter.sysyplus",
                            "match": ","
                        }
                    ]
                }
            ]
        },
        "struct-definition": {
            "patterns": [
                {
                    "name": "meta.struct.definition.sysyplus",
                    "begin": "\\b(struct)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\{)",
                    "beginCaptures": {
                        "1": { "name": "keyword.other.struct.sysyplus" },
                        "2": { "name": "entity.name.type.struct.sysyplus" },
                        "3": { "name": "punctuation.definition.block.begin.sysyplus" }
                    },
                    "end": "\\}",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.block.end.sysyplus" }
                    },
                    "patterns": [
                        {
                            "include": "#variable-declaration"
                        },
                        {
                            "include": "#comments"
                        },
                        {
                            "name": "punctuation.terminator.statement.sysyplus",
                            "match": ";"
                        }
                    ]
                }
            ]
        },
        "control-structures": {
            "patterns": [
                {
                    "name": "meta.control.if.sysyplus",
                    "begin": "\\b(if)\\s*(\\()",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.conditional.sysyplus" },
                        "2": { "name": "punctuation.definition.condition.begin.sysyplus" }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.condition.end.sysyplus" }
                    },
                    "patterns": [
                        { "include": "$self" }
                    ]
                },
                {
                    "name": "meta.control.while.sysyplus",
                    "begin": "\\b(while)\\s*(\\()",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.loop.sysyplus" },
                        "2": { "name": "punctuation.definition.condition.begin.sysyplus" }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.condition.end.sysyplus" }
                    },
                    "patterns": [
                        { "include": "$self" }
                    ]
                },
                {
                    "name": "meta.control.for.sysyplus",
                    "begin": "\\b(for)\\s*(\\()",
                    "beginCaptures": {
                        "1": { "name": "keyword.control.loop.sysyplus" },
                        "2": { "name": "punctuation.definition.condition.begin.sysyplus" }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.condition.end.sysyplus" }
                    },
                    "patterns": [
                        { "include": "$self" }
                    ]
                }
            ]
        },
        "identifiers": {
            "name": "variable.other.readwrite.sysyplus",
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
    },
    "scopeName": "source.sysyplus"
} 